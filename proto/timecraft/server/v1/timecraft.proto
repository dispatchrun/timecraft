syntax = "proto3";

package timecraft.server.v1;

message TaskRequest {
  ModuleSpec module = 1;
  oneof input {
    HTTPRequest http_request = 2;
  }
}

message TaskResponse {
  TaskState state = 1;
  string process_id = 2;
  string error_message = 3;
  oneof output {
    HTTPResponse http_response = 4;
  }
}

message ModuleSpec {
  string path = 1;
  repeated string args = 2;
}

message HTTPRequest {
  string method = 1;
  string path = 2;
  repeated Header headers = 3;
  bytes body = 4;
}

message HTTPResponse {
  int32 status_code = 1;
  repeated Header headers = 2;
  bytes body = 3;
}

message Header {
  string name = 1;
  string value = 2;
}

enum TaskState {
  TASK_STATE_UNSPECIFIED = 0; // required by buf lint
  TASK_STATE_QUEUED = 1;
  TASK_STATE_INITIALIZING = 2;
  TASK_STATE_EXECUTING = 3;
  TASK_STATE_ERROR = 4;
  TASK_STATE_DONE = 5;
}

message SubmitTasksRequest {
  repeated TaskRequest requests = 1;
}

message SubmitTasksResponse {
  repeated string task_id = 1;
}

message LookupTasksRequest {
  repeated string task_id = 1;
}

message LookupTasksResponse {
  repeated TaskResponse responses = 1;
}

message VersionRequest {}

message VersionResponse {
  string version = 1;
}

service TimecraftService {
  rpc SubmitTasks(SubmitTasksRequest) returns (SubmitTasksResponse) {}
  rpc LookupTasks(LookupTasksRequest) returns (LookupTasksResponse) {}
  rpc Version(VersionRequest) returns (VersionResponse) {}
}
