// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: timecraft/server/v1/timecraft.proto

package serverv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskState int32

const (
	TaskState_TASK_STATE_UNSPECIFIED  TaskState = 0 // required by buf lint
	TaskState_TASK_STATE_QUEUED       TaskState = 1
	TaskState_TASK_STATE_INITIALIZING TaskState = 2
	TaskState_TASK_STATE_EXECUTING    TaskState = 3
	TaskState_TASK_STATE_ERROR        TaskState = 4
	TaskState_TASK_STATE_SUCCESS      TaskState = 5
)

// Enum value maps for TaskState.
var (
	TaskState_name = map[int32]string{
		0: "TASK_STATE_UNSPECIFIED",
		1: "TASK_STATE_QUEUED",
		2: "TASK_STATE_INITIALIZING",
		3: "TASK_STATE_EXECUTING",
		4: "TASK_STATE_ERROR",
		5: "TASK_STATE_SUCCESS",
	}
	TaskState_value = map[string]int32{
		"TASK_STATE_UNSPECIFIED":  0,
		"TASK_STATE_QUEUED":       1,
		"TASK_STATE_INITIALIZING": 2,
		"TASK_STATE_EXECUTING":    3,
		"TASK_STATE_ERROR":        4,
		"TASK_STATE_SUCCESS":      5,
	}
)

func (x TaskState) Enum() *TaskState {
	p := new(TaskState)
	*p = x
	return p
}

func (x TaskState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskState) Descriptor() protoreflect.EnumDescriptor {
	return file_timecraft_server_v1_timecraft_proto_enumTypes[0].Descriptor()
}

func (TaskState) Type() protoreflect.EnumType {
	return &file_timecraft_server_v1_timecraft_proto_enumTypes[0]
}

func (x TaskState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskState.Descriptor instead.
func (TaskState) EnumDescriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{0}
}

type TaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module *ModuleSpec `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	// Types that are assignable to Input:
	//
	//	*TaskRequest_HttpRequest
	Input isTaskRequest_Input `protobuf_oneof:"input"`
}

func (x *TaskRequest) Reset() {
	*x = TaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRequest) ProtoMessage() {}

func (x *TaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRequest.ProtoReflect.Descriptor instead.
func (*TaskRequest) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{0}
}

func (x *TaskRequest) GetModule() *ModuleSpec {
	if x != nil {
		return x.Module
	}
	return nil
}

func (m *TaskRequest) GetInput() isTaskRequest_Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (x *TaskRequest) GetHttpRequest() *HTTPRequest {
	if x, ok := x.GetInput().(*TaskRequest_HttpRequest); ok {
		return x.HttpRequest
	}
	return nil
}

type isTaskRequest_Input interface {
	isTaskRequest_Input()
}

type TaskRequest_HttpRequest struct {
	HttpRequest *HTTPRequest `protobuf:"bytes,2,opt,name=http_request,json=httpRequest,proto3,oneof"`
}

func (*TaskRequest_HttpRequest) isTaskRequest_Input() {}

type TaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId       string    `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	State        TaskState `protobuf:"varint,2,opt,name=state,proto3,enum=timecraft.server.v1.TaskState" json:"state,omitempty"`
	ProcessId    string    `protobuf:"bytes,3,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	ErrorMessage string    `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Types that are assignable to Output:
	//
	//	*TaskResponse_HttpResponse
	Output isTaskResponse_Output `protobuf_oneof:"output"`
}

func (x *TaskResponse) Reset() {
	*x = TaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResponse) ProtoMessage() {}

func (x *TaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResponse.ProtoReflect.Descriptor instead.
func (*TaskResponse) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{1}
}

func (x *TaskResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskResponse) GetState() TaskState {
	if x != nil {
		return x.State
	}
	return TaskState_TASK_STATE_UNSPECIFIED
}

func (x *TaskResponse) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *TaskResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (m *TaskResponse) GetOutput() isTaskResponse_Output {
	if m != nil {
		return m.Output
	}
	return nil
}

func (x *TaskResponse) GetHttpResponse() *HTTPResponse {
	if x, ok := x.GetOutput().(*TaskResponse_HttpResponse); ok {
		return x.HttpResponse
	}
	return nil
}

type isTaskResponse_Output interface {
	isTaskResponse_Output()
}

type TaskResponse_HttpResponse struct {
	HttpResponse *HTTPResponse `protobuf:"bytes,5,opt,name=http_response,json=httpResponse,proto3,oneof"`
}

func (*TaskResponse_HttpResponse) isTaskResponse_Output() {}

type ModuleSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path          string      `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Function      string      `protobuf:"bytes,2,opt,name=function,proto3" json:"function,omitempty"`
	Args          []string    `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	Env           []string    `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty"`
	OutboundProxy *ModuleSpec `protobuf:"bytes,5,opt,name=outbound_proxy,json=outboundProxy,proto3" json:"outbound_proxy,omitempty"`
}

func (x *ModuleSpec) Reset() {
	*x = ModuleSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleSpec) ProtoMessage() {}

func (x *ModuleSpec) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleSpec.ProtoReflect.Descriptor instead.
func (*ModuleSpec) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{2}
}

func (x *ModuleSpec) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ModuleSpec) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *ModuleSpec) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ModuleSpec) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *ModuleSpec) GetOutboundProxy() *ModuleSpec {
	if x != nil {
		return x.OutboundProxy
	}
	return nil
}

type HTTPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method  string    `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Path    string    `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Headers []*Header `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty"`
	Body    []byte    `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	Port    int32     `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *HTTPRequest) Reset() {
	*x = HTTPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPRequest) ProtoMessage() {}

func (x *HTTPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPRequest.ProtoReflect.Descriptor instead.
func (*HTTPRequest) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{3}
}

func (x *HTTPRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HTTPRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *HTTPRequest) GetHeaders() []*Header {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HTTPRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *HTTPRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type HTTPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32     `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Headers    []*Header `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty"`
	Body       []byte    `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *HTTPResponse) Reset() {
	*x = HTTPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPResponse) ProtoMessage() {}

func (x *HTTPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPResponse.ProtoReflect.Descriptor instead.
func (*HTTPResponse) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{4}
}

func (x *HTTPResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *HTTPResponse) GetHeaders() []*Header {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HTTPResponse) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{5}
}

func (x *Header) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Header) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SubmitTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*TaskRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *SubmitTasksRequest) Reset() {
	*x = SubmitTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTasksRequest) ProtoMessage() {}

func (x *SubmitTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTasksRequest.ProtoReflect.Descriptor instead.
func (*SubmitTasksRequest) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{6}
}

func (x *SubmitTasksRequest) GetRequests() []*TaskRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type SubmitTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId []string `protobuf:"bytes,1,rep,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *SubmitTasksResponse) Reset() {
	*x = SubmitTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTasksResponse) ProtoMessage() {}

func (x *SubmitTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTasksResponse.ProtoReflect.Descriptor instead.
func (*SubmitTasksResponse) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{7}
}

func (x *SubmitTasksResponse) GetTaskId() []string {
	if x != nil {
		return x.TaskId
	}
	return nil
}

type LookupTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId []string `protobuf:"bytes,1,rep,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *LookupTasksRequest) Reset() {
	*x = LookupTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupTasksRequest) ProtoMessage() {}

func (x *LookupTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupTasksRequest.ProtoReflect.Descriptor instead.
func (*LookupTasksRequest) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{8}
}

func (x *LookupTasksRequest) GetTaskId() []string {
	if x != nil {
		return x.TaskId
	}
	return nil
}

type LookupTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses []*TaskResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *LookupTasksResponse) Reset() {
	*x = LookupTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupTasksResponse) ProtoMessage() {}

func (x *LookupTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupTasksResponse.ProtoReflect.Descriptor instead.
func (*LookupTasksResponse) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{9}
}

func (x *LookupTasksResponse) GetResponses() []*TaskResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type PollTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchSize int32 `protobuf:"varint,1,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	TimeoutNs int64 `protobuf:"varint,2,opt,name=timeout_ns,json=timeoutNs,proto3" json:"timeout_ns,omitempty"`
}

func (x *PollTasksRequest) Reset() {
	*x = PollTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollTasksRequest) ProtoMessage() {}

func (x *PollTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollTasksRequest.ProtoReflect.Descriptor instead.
func (*PollTasksRequest) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{10}
}

func (x *PollTasksRequest) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *PollTasksRequest) GetTimeoutNs() int64 {
	if x != nil {
		return x.TimeoutNs
	}
	return 0
}

type PollTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses []*TaskResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *PollTasksResponse) Reset() {
	*x = PollTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollTasksResponse) ProtoMessage() {}

func (x *PollTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollTasksResponse.ProtoReflect.Descriptor instead.
func (*PollTasksResponse) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{11}
}

func (x *PollTasksResponse) GetResponses() []*TaskResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type DiscardTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId []string `protobuf:"bytes,1,rep,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *DiscardTasksRequest) Reset() {
	*x = DiscardTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscardTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscardTasksRequest) ProtoMessage() {}

func (x *DiscardTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscardTasksRequest.ProtoReflect.Descriptor instead.
func (*DiscardTasksRequest) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{12}
}

func (x *DiscardTasksRequest) GetTaskId() []string {
	if x != nil {
		return x.TaskId
	}
	return nil
}

type DiscardTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DiscardTasksResponse) Reset() {
	*x = DiscardTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscardTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscardTasksResponse) ProtoMessage() {}

func (x *DiscardTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscardTasksResponse.ProtoReflect.Descriptor instead.
func (*DiscardTasksResponse) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{13}
}

type ProcessIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProcessIDRequest) Reset() {
	*x = ProcessIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessIDRequest) ProtoMessage() {}

func (x *ProcessIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessIDRequest.ProtoReflect.Descriptor instead.
func (*ProcessIDRequest) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{14}
}

type ProcessIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessId string `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
}

func (x *ProcessIDResponse) Reset() {
	*x = ProcessIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessIDResponse) ProtoMessage() {}

func (x *ProcessIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessIDResponse.ProtoReflect.Descriptor instead.
func (*ProcessIDResponse) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{15}
}

func (x *ProcessIDResponse) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

type SpawnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module *ModuleSpec `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *SpawnRequest) Reset() {
	*x = SpawnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpawnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpawnRequest) ProtoMessage() {}

func (x *SpawnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpawnRequest.ProtoReflect.Descriptor instead.
func (*SpawnRequest) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{16}
}

func (x *SpawnRequest) GetModule() *ModuleSpec {
	if x != nil {
		return x.Module
	}
	return nil
}

type SpawnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessId string `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	IpAddress string `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
}

func (x *SpawnResponse) Reset() {
	*x = SpawnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpawnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpawnResponse) ProtoMessage() {}

func (x *SpawnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpawnResponse.ProtoReflect.Descriptor instead.
func (*SpawnResponse) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{17}
}

func (x *SpawnResponse) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *SpawnResponse) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

type KillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessId string `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
}

func (x *KillRequest) Reset() {
	*x = KillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillRequest) ProtoMessage() {}

func (x *KillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillRequest.ProtoReflect.Descriptor instead.
func (*KillRequest) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{18}
}

func (x *KillRequest) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

type KillResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KillResponse) Reset() {
	*x = KillResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillResponse) ProtoMessage() {}

func (x *KillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillResponse.ProtoReflect.Descriptor instead.
func (*KillResponse) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{19}
}

type VersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VersionRequest) Reset() {
	*x = VersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionRequest) ProtoMessage() {}

func (x *VersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionRequest.ProtoReflect.Descriptor instead.
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{20}
}

type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timecraft_server_v1_timecraft_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_timecraft_server_v1_timecraft_proto_rawDescGZIP(), []int{21}
}

func (x *VersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_timecraft_server_v1_timecraft_proto protoreflect.FileDescriptor

var file_timecraft_server_v1_timecraft_proto_rawDesc = []byte{
	0x0a, 0x23, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22, 0x96, 0x01, 0x0a, 0x0b, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x69, 0x6d,
	0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x06, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x54, 0x54, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x68,
	0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x22, 0xf5, 0x01, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x74,
	0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x08, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x0a,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72,
	0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76,
	0x12, 0x46, 0x0a, 0x0e, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x63,
	0x72, 0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0d, 0x6f, 0x75, 0x74, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x22, 0x98, 0x01, 0x0a, 0x0b, 0x48, 0x54, 0x54,
	0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x22, 0x7a, 0x0a, 0x0c, 0x48, 0x54, 0x54, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22,
	0x32, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x52, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x69,
	0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x2e, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x12, 0x4c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x13, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x50,
	0x0a, 0x10, 0x50, 0x6f, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4e, 0x73,
	0x22, 0x54, 0x0a, 0x11, 0x50, 0x6f, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x63,
	0x72, 0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x2e, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72,
	0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72,
	0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12,
	0x0a, 0x10, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x32, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x0c, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61,
	0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22,
	0x4d, 0x0a, 0x0d, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x2c,
	0x0a, 0x0b, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x0e, 0x0a, 0x0c,
	0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x0a, 0x0e,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2b,
	0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2a, 0xa3, 0x01, 0x0a, 0x09,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x41, 0x53,
	0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17,
	0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49,
	0x41, 0x4c, 0x49, 0x5a, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x41, 0x53,
	0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4e,
	0x47, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x41, 0x53,
	0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x05, 0x32, 0xf6, 0x05, 0x0a, 0x10, 0x54, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x27, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0b, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x27, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c,
	0x0a, 0x09, 0x50, 0x6f, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x25, 0x2e, 0x74, 0x69,
	0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x0c,
	0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x28, 0x2e, 0x74,
	0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61,
	0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73,
	0x63, 0x61, 0x72, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x44,
	0x12, 0x25, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x72,
	0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x50, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x12, 0x21, 0x2e, 0x74, 0x69, 0x6d,
	0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x04, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x20, 0x2e, 0x74, 0x69,
	0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x56, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e,
	0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xe5, 0x01, 0x0a, 0x17, 0x63,
	0x6f, 0x6d, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x72, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x72,
	0x61, 0x66, 0x74, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x53, 0x58, 0xaa, 0x02, 0x13, 0x54,
	0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x13, 0x54, 0x69, 0x6d, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x5c, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x54, 0x69, 0x6d, 0x65, 0x63,
	0x72, 0x61, 0x66, 0x74, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15, 0x54, 0x69, 0x6d,
	0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_timecraft_server_v1_timecraft_proto_rawDescOnce sync.Once
	file_timecraft_server_v1_timecraft_proto_rawDescData = file_timecraft_server_v1_timecraft_proto_rawDesc
)

func file_timecraft_server_v1_timecraft_proto_rawDescGZIP() []byte {
	file_timecraft_server_v1_timecraft_proto_rawDescOnce.Do(func() {
		file_timecraft_server_v1_timecraft_proto_rawDescData = protoimpl.X.CompressGZIP(file_timecraft_server_v1_timecraft_proto_rawDescData)
	})
	return file_timecraft_server_v1_timecraft_proto_rawDescData
}

var file_timecraft_server_v1_timecraft_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_timecraft_server_v1_timecraft_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_timecraft_server_v1_timecraft_proto_goTypes = []interface{}{
	(TaskState)(0),               // 0: timecraft.server.v1.TaskState
	(*TaskRequest)(nil),          // 1: timecraft.server.v1.TaskRequest
	(*TaskResponse)(nil),         // 2: timecraft.server.v1.TaskResponse
	(*ModuleSpec)(nil),           // 3: timecraft.server.v1.ModuleSpec
	(*HTTPRequest)(nil),          // 4: timecraft.server.v1.HTTPRequest
	(*HTTPResponse)(nil),         // 5: timecraft.server.v1.HTTPResponse
	(*Header)(nil),               // 6: timecraft.server.v1.Header
	(*SubmitTasksRequest)(nil),   // 7: timecraft.server.v1.SubmitTasksRequest
	(*SubmitTasksResponse)(nil),  // 8: timecraft.server.v1.SubmitTasksResponse
	(*LookupTasksRequest)(nil),   // 9: timecraft.server.v1.LookupTasksRequest
	(*LookupTasksResponse)(nil),  // 10: timecraft.server.v1.LookupTasksResponse
	(*PollTasksRequest)(nil),     // 11: timecraft.server.v1.PollTasksRequest
	(*PollTasksResponse)(nil),    // 12: timecraft.server.v1.PollTasksResponse
	(*DiscardTasksRequest)(nil),  // 13: timecraft.server.v1.DiscardTasksRequest
	(*DiscardTasksResponse)(nil), // 14: timecraft.server.v1.DiscardTasksResponse
	(*ProcessIDRequest)(nil),     // 15: timecraft.server.v1.ProcessIDRequest
	(*ProcessIDResponse)(nil),    // 16: timecraft.server.v1.ProcessIDResponse
	(*SpawnRequest)(nil),         // 17: timecraft.server.v1.SpawnRequest
	(*SpawnResponse)(nil),        // 18: timecraft.server.v1.SpawnResponse
	(*KillRequest)(nil),          // 19: timecraft.server.v1.KillRequest
	(*KillResponse)(nil),         // 20: timecraft.server.v1.KillResponse
	(*VersionRequest)(nil),       // 21: timecraft.server.v1.VersionRequest
	(*VersionResponse)(nil),      // 22: timecraft.server.v1.VersionResponse
}
var file_timecraft_server_v1_timecraft_proto_depIdxs = []int32{
	3,  // 0: timecraft.server.v1.TaskRequest.module:type_name -> timecraft.server.v1.ModuleSpec
	4,  // 1: timecraft.server.v1.TaskRequest.http_request:type_name -> timecraft.server.v1.HTTPRequest
	0,  // 2: timecraft.server.v1.TaskResponse.state:type_name -> timecraft.server.v1.TaskState
	5,  // 3: timecraft.server.v1.TaskResponse.http_response:type_name -> timecraft.server.v1.HTTPResponse
	3,  // 4: timecraft.server.v1.ModuleSpec.outbound_proxy:type_name -> timecraft.server.v1.ModuleSpec
	6,  // 5: timecraft.server.v1.HTTPRequest.headers:type_name -> timecraft.server.v1.Header
	6,  // 6: timecraft.server.v1.HTTPResponse.headers:type_name -> timecraft.server.v1.Header
	1,  // 7: timecraft.server.v1.SubmitTasksRequest.requests:type_name -> timecraft.server.v1.TaskRequest
	2,  // 8: timecraft.server.v1.LookupTasksResponse.responses:type_name -> timecraft.server.v1.TaskResponse
	2,  // 9: timecraft.server.v1.PollTasksResponse.responses:type_name -> timecraft.server.v1.TaskResponse
	3,  // 10: timecraft.server.v1.SpawnRequest.module:type_name -> timecraft.server.v1.ModuleSpec
	7,  // 11: timecraft.server.v1.TimecraftService.SubmitTasks:input_type -> timecraft.server.v1.SubmitTasksRequest
	9,  // 12: timecraft.server.v1.TimecraftService.LookupTasks:input_type -> timecraft.server.v1.LookupTasksRequest
	11, // 13: timecraft.server.v1.TimecraftService.PollTasks:input_type -> timecraft.server.v1.PollTasksRequest
	13, // 14: timecraft.server.v1.TimecraftService.DiscardTasks:input_type -> timecraft.server.v1.DiscardTasksRequest
	15, // 15: timecraft.server.v1.TimecraftService.ProcessID:input_type -> timecraft.server.v1.ProcessIDRequest
	17, // 16: timecraft.server.v1.TimecraftService.Spawn:input_type -> timecraft.server.v1.SpawnRequest
	19, // 17: timecraft.server.v1.TimecraftService.Kill:input_type -> timecraft.server.v1.KillRequest
	21, // 18: timecraft.server.v1.TimecraftService.Version:input_type -> timecraft.server.v1.VersionRequest
	8,  // 19: timecraft.server.v1.TimecraftService.SubmitTasks:output_type -> timecraft.server.v1.SubmitTasksResponse
	10, // 20: timecraft.server.v1.TimecraftService.LookupTasks:output_type -> timecraft.server.v1.LookupTasksResponse
	12, // 21: timecraft.server.v1.TimecraftService.PollTasks:output_type -> timecraft.server.v1.PollTasksResponse
	14, // 22: timecraft.server.v1.TimecraftService.DiscardTasks:output_type -> timecraft.server.v1.DiscardTasksResponse
	16, // 23: timecraft.server.v1.TimecraftService.ProcessID:output_type -> timecraft.server.v1.ProcessIDResponse
	18, // 24: timecraft.server.v1.TimecraftService.Spawn:output_type -> timecraft.server.v1.SpawnResponse
	20, // 25: timecraft.server.v1.TimecraftService.Kill:output_type -> timecraft.server.v1.KillResponse
	22, // 26: timecraft.server.v1.TimecraftService.Version:output_type -> timecraft.server.v1.VersionResponse
	19, // [19:27] is the sub-list for method output_type
	11, // [11:19] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_timecraft_server_v1_timecraft_proto_init() }
func file_timecraft_server_v1_timecraft_proto_init() {
	if File_timecraft_server_v1_timecraft_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_timecraft_server_v1_timecraft_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscardTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscardTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpawnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpawnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timecraft_server_v1_timecraft_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_timecraft_server_v1_timecraft_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*TaskRequest_HttpRequest)(nil),
	}
	file_timecraft_server_v1_timecraft_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*TaskResponse_HttpResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_timecraft_server_v1_timecraft_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_timecraft_server_v1_timecraft_proto_goTypes,
		DependencyIndexes: file_timecraft_server_v1_timecraft_proto_depIdxs,
		EnumInfos:         file_timecraft_server_v1_timecraft_proto_enumTypes,
		MessageInfos:      file_timecraft_server_v1_timecraft_proto_msgTypes,
	}.Build()
	File_timecraft_server_v1_timecraft_proto = out.File
	file_timecraft_server_v1_timecraft_proto_rawDesc = nil
	file_timecraft_server_v1_timecraft_proto_goTypes = nil
	file_timecraft_server_v1_timecraft_proto_depIdxs = nil
}
